{% set name = "spherical_functions" %}
{% set pypiname = "spherical-functions" %}
{% set version = "2023.0.1" %}
{% set sha256 = "0851110f927d20627e9b9792003fa589d5aa16a6f9dc0879b232e86171fc9cd8" %}
{% set python_min = "3.10" %}

# See https://conda-forge.org/docs/maintainer/knowledge_base/#noarch-python for the reason we
# *can* set `python_min` here and https://github.com/conda-forge/cfep/blob/main/cfep-25.md
# for what `python_min` actually means.  I have to do this because conda-forge still supports
# python 3.9, but sxs only supports >=3.10.

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ pypiname[0] }}/{{ pypiname }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - python {{ python_min }}
    - pip >=20.0.2
    - hatchling
  run:
    - python >={{ python_min }}
    - numpy
    - scipy
    - numba
    - quaternion
    - spinsfast

test:
  requires:
    - python {{ python_min }}
  imports:
    - spherical_functions

about:
  home: http://github.com/moble/spherical_functions
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Python/numba implementation of Wigner D Matrices, spin-weighted spherical harmonics, and associated functions
  description: |
    Python/numba package for evaluating and transforming Wigner‚Äôs ùîá matrices, Wigner‚Äôs 3-j symbols,
    and spin-weighted (and scalar) spherical harmonics. These functions are evaluated directly in
    terms of quaternions, as well as in the more standard forms of spherical coordinates and Euler
    angles.
  dev_url: https://github.com/moble/spherical_functions

extra:
  recipe-maintainers:
    - moble
